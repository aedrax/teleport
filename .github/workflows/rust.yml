name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # fmt and clippy
  fmt-clippy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2

      # fmt
      - run: cargo fmt --all -- --check

      # clippy
      - run: cargo clippy -- -D warnings

  # build, test all supported targets
  build-test-stable:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targets:
          - x86_64-unknown-linux-musl
          - x86_64-unknown-linux-gnu
        toolchain:
          # msrv
          - 1.64.0
          - stable
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.targets }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo install cross --git https://github.com/cross-rs/cross
      - run: cross build --locked --workspace --target ${{ matrix.targets }}
      - run: cross build --locked --workspace --target ${{ matrix.targets }} --release
      - run: cross test --locked --workspace --target ${{ matrix.targets }}
      - uses: actions/upload-artifact@v3
        with:
          name: teleporter-${{ matrix.targets }}
          path: target/${{ matrix.targets }}/release/teleporter

  build-test-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        targets:
          - x86_64-apple-darwin
        toolchain:
          # msrv
          - 1.64.0
          - stable
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.targets }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --locked --workspace --target ${{ matrix.targets }}
      - run: cargo build --locked --workspace --target ${{ matrix.targets }} --release
      - run: cargo test --locked --workspace --target ${{ matrix.targets }}
      - uses: actions/upload-artifact@v3
        with:
          name: teleporter-${{ matrix.targets }}
          path: target/${{ matrix.targets }}/release/teleporter
